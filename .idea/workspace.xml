<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="7a68a6c1-33e3-4125-9c83-851cc132e4f0" name="Default Changelist" comment="Правка">
      <change beforePath="$PROJECT_DIR$/diagrams/cinema.jpg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/diagrams/component_diagram.jpg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/diagrams/sequence_diagram_1.jpg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/diagrams/sequence_diagram_2.jpg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/diagrams/sequence_diagram_3.jpg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/diagrams/usecase_diagram.jpg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/.golangci.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/Makefile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/api-tests/Cinema.postman_collection.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/api/movie/movie.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/api/movie/movie.swagger.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/bin/generate-grpc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/cmd/cinema/config.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/cmd/cinema/main.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/docker-compose.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/go.mod" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/go.sum" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/migrations/000001_create_movie_table.down.sql" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/migrations/000001_create_movie_table.up.sql" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/pkg/movie/application/movieservice.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/pkg/movie/infrastricture/repository/dbrepository.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/pkg/movie/infrastricture/transport/handlers.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/pkg/movie/infrastricture/transport/handlers_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cinema/pkg/movie/model/movie.go" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.16" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1r1PhWHr2zl5FjUpd6ikx2xuRmH" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="true" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="project.propVCSSupport.Mappings" />
  </component>
  <component name="RunManager" selected="Go Test.go test cinema/pkg/cinema/infrastricture/transport">
    <configuration name="TestAddMovie in cinema/pkg/cinema/infrastricture/transport" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="cinema" />
      <working_directory value="$PROJECT_DIR$/pkg/cinema/infrastricture/transport" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="cinema/pkg/cinema/infrastricture/transport" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestAddMovie\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestDeleteMovie in cinema/pkg/cinema/infrastricture/transport" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="cinema" />
      <working_directory value="$PROJECT_DIR$/pkg/cinema/infrastricture/transport" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="cinema/pkg/cinema/infrastricture/transport" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestDeleteMovie\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUpdateMovie in cinema/pkg/cinema/infrastricture/transport" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="cinema" />
      <working_directory value="$PROJECT_DIR$/pkg/cinema/infrastricture/transport" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="cinema/pkg/cinema/infrastricture/transport" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUpdateMovie\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test cinema/pkg/cinema/infrastricture/transport" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="cinema" />
      <working_directory value="$PROJECT_DIR$/pkg/cinema/infrastricture/transport" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="cinema/pkg/cinema/infrastricture/transport" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="test-request#1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" path="$PROJECT_DIR$/test-request.http" runType="Run single request">
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test cinema/pkg/cinema/infrastricture/transport" />
        <item itemvalue="Go Test.TestDeleteMovie in cinema/pkg/cinema/infrastricture/transport" />
        <item itemvalue="Go Test.TestUpdateMovie in cinema/pkg/cinema/infrastricture/transport" />
        <item itemvalue="Go Test.TestAddMovie in cinema/pkg/cinema/infrastricture/transport" />
        <item itemvalue="HTTP Request.test-request#1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/.." />
      <path value="$PROJECT_DIR$/../.." />
    </ignored-roots>
    <MESSAGE value="Поправила файл gitignore" />
    <MESSAGE value="Добавила метод добавления фильма" />
    <MESSAGE value="Добавила методы получения, изменения, удаления фильма" />
    <MESSAGE value="Добавила тесты для infrastructure" />
    <MESSAGE value="Поправила недоработки&#10;Api-тесты, линтер&#10;Настроила разворачивание в докере" />
    <MESSAGE value="Добавила автогенерируемое api" />
    <MESSAGE value="Правка" />
    <option name="LAST_COMMIT_MESSAGE" value="Правка" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>